<!-- CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- JS com Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<!-- JavaScript dependencies -->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<style>
  #qrcode-container {
    position: fixed;
    /* Fixa o elemento na tela */
    top: 20px;
    /* Distância do topo */
    right: 20px;
    /* Distância da direita */
    z-index: 1000;
    /* Garante que o QR Code fique por cima de outros elementos */
    width: 150px;
    /* Largura do QR Code */
    height: 150px;
    /* Altura do QR Code */
  }

  #qrcode-container img {
    width: 100%;
    /* Faz a imagem ocupar toda a largura do container */
    height: auto;
    /* Ajusta a altura automaticamente para manter a proporção */
  }

  /* Responsividade para telas menores */
  @media (max-width: 768px) {
    #qrcode-container {
      width: 80px;
      height: 80px;
    }
  }
</style>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
  integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw=="
  crossorigin="anonymous" referrerpolicy="no-referrer" />

<div id="qrcode-container" class="mt-5">
  <img src="https://res.cloudinary.com/dyhjjms8y/image/upload/v1717257486/Captura_de_tela_2024-06-01_155812_npehrw.png"
    alt="QR Code">
</div>

<section class="container py-5 mt-5" id="roadmap">
  <div class="row justify-content-center">
    <div class="col-md-8 text-center">
      <h1 class="display-4 mb-4">Roadmap das Aulas</h1>

      <p class="lead text-center">
        Confira o cronograma das aulas e os tópicos que serão abordados:
      </p>

      <div class="text-center">
        <img
          src="https://res.cloudinary.com/dyhjjms8y/image/upload/v1717115396/Captura_de_tela_2024-05-31_002953_evnk75.png"
          alt="Roadmap das Aulas" class="img-fluid rounded shadow">
      </div>
    </div>
  </div>
</section>


<section class="container" style="margin-top: 80px;">
  <div>
    <h1 class="mb-4">SRE: Você está fazendo isso errado!</h1>
    <table class="table table-striped">
      <thead>
        <tr>
          <th>Curso</th>
          <th>Semana</th>
          <th>Pontuação</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>
            <a href="https://learn.microsoft.com/pt-br/training/modules/intro-to-site-reliability-engineering/4-key-principles-1-virtuous-cycles" target="_blank"
              class="btn btn-link text-decoration-none text-dark fw-bold">
              <i class="fa-solid fa-share-from-square"></i> Princípios e práticas fundamentais da SRE: ciclos virtuosos            </a>
          </td>
          <td>Semana 09</td>
          <td>0</td>
        </tr>
        <tr>
          <td>
            <a href="https://learn.microsoft.com/pt-br/training/modules/intro-to-site-reliability-engineering/5-key-principles-2-human-side-of-sre" target="_blank"
              class="btn btn-link text-decoration-none text-dark fw-bold">
              <i class="fa-solid fa-shield-halved"></i> Princípios e práticas fundamentais da SRE: O lado humano da SRE
            </a>
          </td>
          <td>Semana 09</td>
          <td>0</td>
        </tr>
        <tr>
          <td>
            <a href="https://learn.microsoft.com/pt-br/training/modules/intro-to-site-reliability-engineering/6-getting-started" target="_blank"
              class="btn btn-link text-decoration-none text-dark fw-bold">
              <i class="fa-solid fa-share"></i> SRE na prática. Como as empresas tem usado essa disciplina na prática?
            </a>
          </td>
          <td>Semana 09</td>
          <td>0</td>
        </tr>
        <tr>
          <td>
            <a href="https://cloudcasters.io/pt-br/site-reliability-engineer-sre/"
              target="_blank" class="btn btn-link text-decoration-none text-dark fw-bold">
              <i class="fa-solid fa-shield"></i> Site Reliability Engineer (SRE)
            </a>
          </td>
          <td>Semana 09</td>
          <td>0</td>
        </tr>
      </tbody>
    </table>
  </div>
</section>

<section class="container py-5">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <div class="d-flex justify-content-around">
        <a href="https://github.com/render-examples/django" class="btn btn-primary btn-lg mx-2" target="_blank">
          <i class="fab fa-github"></i> Repositório GitHub - Django com Render
        </a>
      </div>
    </div>
  </div>
</section>

<section class="container py-5" id="esquenta-kahoot">
  <div class="row justify-content-center">
    <div class="col-md-8 text-center">
      <h1 class="display-4 mb-4">
        <i class="fas fa-gamepad me-2 text-warning"></i> Vamos ver se vocês estão fazendo Autoestudos!
      </h1>

      <p class="lead">
        Prepare-se para o quiz!
      </p>

      <div class="d-flex justify-content-center mt-4">
        <a href="https://kahoot.it/" target="_blank" rel="noopener noreferrer" class="btn btn-lg btn-warning">
          <i class="fas fa-play me-2"></i> Jogar Kahoot!
        </a>
      </div>
    </div>
  </div>
</section>

<section class="container py-5">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <h2 class="text-center display-4 mb-4">SRE (Site Reliability Engineering)</h2>
      <p class="lead text-center">Explorando a Engenharia de Confiabilidade de Sites</p>

      <div class="card mb-4">
        <div class="card-body">
          <p class="card-text">SRE é uma disciplina que incorpora aspectos de engenharia de software e aplica-os a
            problemas de operações de TI. O principal objetivo é criar sistemas de software escaláveis e altamente
            confiáveis.</p>
        </div>
      </div>

      <div class="accordion" id="sreAccordion">
        <div class="accordion-item">
          <h3 class="accordion-header" id="sreHeadingOne">
            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#sreCollapseOne"
              aria-expanded="true" aria-controls="sreCollapseOne">
              Principais Conceitos
            </button>
          </h3>
          <div id="sreCollapseOne" class="accordion-collapse collapse show" aria-labelledby="sreHeadingOne"
            data-bs-parent="#sreAccordion">
            <div class="accordion-body">
              <ul>
                <li><strong>Automatização:</strong> Eliminação de trabalho manual repetitivo para aumentar a eficiência
                  e reduzir erros.</li>
                <li><strong>Monitoramento e Observabilidade:</strong> Coleta de dados e métricas para entender o
                  comportamento do sistema e identificar problemas.</li>
                <li><strong>Gerenciamento de Incidentes:</strong> Processos para responder e resolver incidentes de
                  forma rápida e eficaz.</li>
                <li><strong>Engenharia de Capacidade:</strong> Garantia de que o sistema tenha recursos suficientes para
                  atender à demanda.</li>
                <li><strong>Gerenciamento de Mudanças:</strong> Implementação de mudanças de forma controlada para
                  minimizar o risco de interrupções.</li>
              </ul>
            </div>
          </div>
        </div>
        <div class="accordion-item">
          <h3 class="accordion-header" id="sreHeadingTwo">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
              data-bs-target="#sreCollapseTwo" aria-expanded="false" aria-controls="sreCollapseTwo">
              Benefícios
            </button>
          </h3>
          <div id="sreCollapseTwo" class="accordion-collapse collapse" aria-labelledby="sreHeadingTwo"
            data-bs-parent="#sreAccordion">
            <div class="accordion-body">
              <ul>
                <li>Maior confiabilidade e disponibilidade do sistema.</li>
                <li>Redução do tempo de inatividade e interrupções.</li>
                <li>Melhora da escalabilidade e desempenho do sistema.</li>
                <li>Maior eficiência operacional e redução de custos.</li>
                <li>Melhora da colaboração entre equipes de desenvolvimento e operações.</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<section class="container py-5">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <h2 class="text-center display-4 mb-4">Tecnologias Essenciais para SRE</h2>
      <p class="lead text-center">Ferramentas que capacitam a Engenharia de Confiabilidade de Sites</p>

      <div class="row row-cols-1 row-cols-md-2 g-4">
        <div class="col">
          <div class="card h-100">
            <div class="card-body d-flex flex-column align-items-center">
              <i class="fab fa-docker display-4 mb-3"></i>
              <h5 class="card-title">Kubernetes</h5>
              <p class="card-text text-center">Plataforma open source para automatizar a implantação, o dimensionamento
                e o gerenciamento de aplicativos em contêineres.</p>
              <a href="https://kubernetes.io/" class="btn btn-primary mt-auto" target="_blank">Saiba mais</a>
            </div>
          </div>
        </div>
        <div class="col">
          <div class="card h-100">
            <div class="card-body d-flex flex-column align-items-center">
              <i class="fas fa-server display-4 mb-3"></i>
              <h5 class="card-title">Rancher</h5>
              <p class="card-text text-center">Plataforma completa de gerenciamento de Kubernetes que facilita a
                operação de clusters em qualquer lugar.</p>
              <a href="https://www.rancher.com/" class="btn btn-primary mt-auto" target="_blank">Saiba mais</a>
            </div>
          </div>
        </div>
        <div class="col">
          <div class="card h-100">
            <div class="card-body d-flex flex-column align-items-center">
              <i class="fas fa-code-branch display-4 mb-3"></i>
              <h5 class="card-title">Terraform</h5>
              <p class="card-text text-center">Ferramenta de código aberto para provisionar e gerenciar infraestrutura
                em nuvem de forma segura e eficiente.</p>
              <a href="https://www.terraform.io/" class="btn btn-primary mt-auto" target="_blank">Saiba mais</a>
            </div>
          </div>
        </div>
        <div class="col">
          <div class="card h-100">
            <div class="card-body d-flex flex-column align-items-center">
              <i class="fas fa-cogs display-4 mb-3"></i>
              <h5 class="card-title">Ansible</h5>
              <p class="card-text text-center">Ferramenta de automação de TI que simplifica tarefas como provisionamento
                em nuvem, gerenciamento de configuração e implantação de aplicativos.</p>
              <a href="https://www.ansible.com/" class="btn btn-primary mt-auto" target="_blank">Saiba mais</a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<section class="container py-5 mb-5" id="tutorial">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <div class="card text-center border-info shadow">
        <div class="card-header bg-info text-white">
          <i class="fas fa-book me-2"></i> Tutorial de Instalação e Configuração do Minikube no Windows
        </div>
        <div class="card-body text-start">
          <h5 class="card-title">Passo 1: Instalar Dependências</h5>
          <p class="card-text">
            Primeiro, instale o Docker para Windows. Baixe e instale o Docker Desktop no site oficial:
          <ul>
            <li><a href="https://www.docker.com/products/docker-desktop" target="_blank" class="btn btn-primary my-2"><i
                  class="fas fa-download me-2"></i>Baixar Docker Desktop</a></li>
          </ul>
          Após a instalação, inicie o Docker Desktop e certifique-se de que está rodando.
          </p>

          <h5 class="card-title">Passo 2: Instalar o Minikube</h5>
          <p class="card-text">
            Baixe e instale o Minikube:
          <pre><code>Invoke-WebRequest -Uri "https://storage.googleapis.com/minikube/releases/latest/minikube-installer.exe" -OutFile "minikube-installer.exe"
Start-Process -FilePath ".\minikube-installer.exe" -Wait</code></pre>
          </p>

          <h5 class="card-title">Passo 3: Iniciar o Minikube</h5>
          <p class="card-text">
            Inicie o Minikube:
          <pre><code>minikube start --driver=docker</code></pre>
          </p>

          <h5 class="card-title">Passo 4: Instalar o Kubectl</h5>
          <p class="card-text">
            Baixe e instale o Kubectl:
          <pre><code>Invoke-WebRequest -Uri "https://dl.k8s.io/release/v1.23.0/bin/windows/amd64/kubectl.exe" -OutFile "kubectl.exe"
$env:Path += ";$pwd"
kubectl version --client</code></pre>
          </p>

          <h5 class="card-title">Passo 5: Criar Aplicação Flask</h5>
          <p class="card-text">
            Crie uma aplicação Flask simples. Crie um diretório para o projeto e um arquivo <code>app.py</code>:
          <pre><code>mkdir flask-app
cd flask-app
New-Item -Path . -Name "app.py" -ItemType "file"</code></pre>
          Adicione o seguinte conteúdo ao <code>app.py</code>:
          <pre><code>from flask import Flask

app = Flask(__name__)

@app.route('/')
def hello():
    return "Hello, World!"

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)</code></pre>
          Crie um arquivo <code>requirements.txt</code>:
          <pre><code>New-Item -Path . -Name "requirements.txt" -ItemType "file"</code></pre>
          Adicione o seguinte conteúdo:
          <pre><code>Flask==2.1.1</code></pre>
          </p>

          <h5 class="card-title">Passo 6: Criar Dockerfile</h5>
          <p class="card-text">
            Crie um arquivo <code>Dockerfile</code> com o seguinte conteúdo:
          <pre><code>New-Item -Path . -Name "Dockerfile" -ItemType "file"
Set-Content -Path "Dockerfile" -Value @"
FROM python:3.9-slim

WORKDIR /app

COPY requirements.txt requirements.txt
RUN pip install -r requirements.txt

COPY . .

CMD ["python", "app.py"]
"@</code></pre>
          </p>

          <h5 class="card-title">Passo 7: Construir e Enviar a Imagem Docker</h5>
          <p class="card-text">
            Construa a imagem Docker:
          <pre><code>minikube -p minikube docker-env | Invoke-Expression
docker build -t flask-app:latest .</code></pre>
          </p>

          <h5 class="card-title">Passo 8: Criar Manifests do Kubernetes</h5>
          <p class="card-text">
            Crie um arquivo <code>deployment.yaml</code>:
          <pre><code>New-Item -Path . -Name "deployment.yaml" -ItemType "file"</code></pre>
          Adicione o seguinte conteúdo:
          <pre><code>apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - name: flask-app
        image: flask-app:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 5000</code></pre>
          Crie um arquivo <code>service.yaml</code>:
          <pre><code>New-Item -Path . -Name "service.yaml" -ItemType "file"</code></pre>
          Adicione o seguinte conteúdo:
          <pre><code>apiVersion: v1
kind: Service
metadata:
  name: flask-app
spec:
  type: NodePort
  selector:
    app: flask-app
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
    nodePort: 30007</code></pre>
          </p>

          <h5 class="card-title">Passo 9: Aplicar Manifests do Kubernetes</h5>
          <p class="card-text">
            Aplique os arquivos de configuração:
          <pre><code>kubectl apply -f deployment.yaml
kubectl apply -f service.yaml</code></pre>
          </p>

          <h5 class="card-title">Passo 10: Verificar os Pods e Serviço</h5>
          <p class="card-text">
            Verifique os pods:
          <pre><code>kubectl get pods</code></pre>
          Verifique o serviço:
          <pre><code>kubectl get svc</code></pre>
          </p>

          <h5 class="card-title">Passo 11: Obter URL de Acesso</h5>
          <p class="card-text">
            Obtenha a URL de acesso:
          <pre><code>minikube service flask-app --url</code></pre>
          Abra a URL no navegador para ver a aplicação Flask em execução.
          </p>

          <h5 class="card-title">Passo 12: Ver o Minikube Dashboard</h5>
          <p class="card-text">
            Inicie o Minikube dashboard:
          <pre><code>minikube dashboard</code></pre>
          Acesse a URL fornecida para visualizar o dashboard.
          </p>
        </div>
      </div>
    </div>
  </div>
</section>

<section class="container py-5 mb-5" id="sre-guide">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <div class="card text-center border-success shadow">
        <div class="card-header bg-success text-white">
          <i class="fas fa-rocket me-2"></i> Como se Tornar um Excelente SRE
        </div>
        <div class="card-body text-start">
          <h5 class="card-title">Introdução ao SRE</h5>
          <p class="card-text">
            Um Site Reliability Engineer (SRE) é responsável por garantir a confiabilidade e disponibilidade dos
            sistemas em produção. Aqui estão os passos essenciais para se tornar um excelente SRE.
          </p>

          <h5 class="card-title">1. Compreender os Fundamentos</h5>
          <p class="card-text">
            É crucial ter uma forte compreensão dos fundamentos de computação e redes, incluindo sistemas operacionais,
            redes, protocolos de comunicação e arquitetura de sistemas distribuídos.
          <ul>
            <li>Estude conceitos de sistemas operacionais como processos, threads, gerenciamento de memória e sistemas
              de arquivos.</li>
            <li>Aprenda sobre redes, incluindo TCP/IP, DNS, HTTP/HTTPS e firewalls.</li>
          </ul>
          </p>

          <h5 class="card-title">2. Aprender Programação e Automação</h5>
          <p class="card-text">
            A automação é uma parte vital do SRE. Familiarize-se com linguagens de programação como Python, Go, ou Ruby,
            e ferramentas de automação como Ansible, Puppet, e Chef.
          <ul>
            <li>Desenvolva scripts para automatizar tarefas repetitivas.</li>
            <li>Crie e gerencie pipelines de CI/CD.</li>
          </ul>
          </p>

          <h5 class="card-title">3. Conhecer Ferramentas de Monitoramento e Logging</h5>
          <p class="card-text">
            Um SRE deve ser proficiente em monitoramento e logging para detectar e solucionar problemas rapidamente.
          <ul>
            <li>Aprenda a usar ferramentas como Prometheus, Grafana, ELK Stack (Elasticsearch, Logstash, Kibana), e
              Splunk.</li>
            <li>Configure alertas para monitorar a saúde dos sistemas.</li>
          </ul>
          </p>

          <h5 class="card-title">4. Dominar Cloud e Contêineres</h5>
          <p class="card-text">
            O conhecimento em tecnologias de cloud e contêineres é essencial.
          <ul>
            <li>Estude serviços de cloud como AWS, Google Cloud, e Azure.</li>
            <li>Aprenda a usar contêineres com Docker e orquestração de contêineres com Kubernetes.</li>
          </ul>
          </p>

          <h5 class="card-title">5. Praticar Resolução de Problemas e Resiliência</h5>
          <p class="card-text">
            Desenvolva habilidades de resolução de problemas e melhore a resiliência dos sistemas.
          <ul>
            <li>Realize exercícios de Chaos Engineering para testar a resiliência dos sistemas.</li>
            <li>Participe de simulações de incidentes para praticar a resposta a incidentes.</li>
          </ul>
          </p>

          <h5 class="card-title">6. Focar na Cultura e Comunicação</h5>
          <p class="card-text">
            Um excelente SRE deve promover uma cultura de colaboração e comunicação eficaz.
          <ul>
            <li>Trabalhe em estreita colaboração com equipes de desenvolvimento e operações.</li>
            <li>Participe de revisões pós-incidente (Postmortems) para identificar áreas de melhoria.</li>
          </ul>
          </p>

          <h5 class="card-title">Recursos Adicionais</h5>
          <p class="card-text">
            Para aprofundar seus conhecimentos em DevOps e Segurança da Informação, explore os seguintes recursos:
          <ul>
            <li><a href="https://roadmap.sh/devops" target="_blank" class="btn btn-primary my-2"><i
                  class="fas fa-map-signs me-2"></i>Trilha de DevOps</a></li>
            <li><a href="https://www.freecodecamp.org/learn/information-security/" target="_blank"
                class="btn btn-warning my-2"><i class="fas fa-lock me-2"></i>Trilha de Segurança da Informação</a></li>
          </ul>
          </p>

          <h5 class="card-title">Conclusão</h5>
          <p class="card-text">
            Tornar-se um excelente SRE requer uma combinação de habilidades técnicas e soft skills. Continuar aprendendo
            e se adaptando às novas tecnologias e práticas é essencial para o sucesso nesta carreira.
          </p>
        </div>
      </div>
    </div>
  </div>
</section>

<section class="container py-5 mb-5" id="avaliacao">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <div class="card text-center border-info shadow">
        <div class="card-header bg-info text-white">
          <i class="fas fa-comment-dots me-2"></i> Sua Opinião é Importante!
        </div>
        <div class="card-body">
          <p class="lead">
            Deixe seu feedback com estrelas e comentários e
            ajude-nos a melhorar o Inteli e o curso.
          </p>
        </div>
      </div>
    </div>
  </div>
</section>

<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-yaml.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism.min.css">
