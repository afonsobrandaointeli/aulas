<!-- CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- JS com Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<!-- JavaScript dependencies -->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<style>
  #qrcode-container {
    position: fixed;
    /* Fixa o elemento na tela */
    top: 20px;
    /* Distância do topo */
    right: 20px;
    /* Distância da direita */
    z-index: 1000;
    /* Garante que o QR Code fique por cima de outros elementos */
    width: 150px;
    /* Largura do QR Code */
    height: 150px;
    /* Altura do QR Code */
  }

  #qrcode-container img {
    width: 100%;
    /* Faz a imagem ocupar toda a largura do container */
    height: auto;
    /* Ajusta a altura automaticamente para manter a proporção */
  }

  /* Responsividade para telas menores */
  @media (max-width: 768px) {
    #qrcode-container {
      width: 80px;
      height: 80px;
    }
  }
</style>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
  integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw=="
  crossorigin="anonymous" referrerpolicy="no-referrer" />

<div id="qrcode-container" class="mt-5">
  <img src="https://res.cloudinary.com/dyhjjms8y/image/upload/v1717257486/Captura_de_tela_2024-06-01_155812_npehrw.png"
    alt="QR Code">
</div>

<section class="container py-5 mt-5" id="roadmap">
  <div class="row justify-content-center">
    <div class="col-md-8 text-center">
      <h1 class="display-4 mb-4">Roadmap das Aulas</h1>

      <p class="lead text-center">
        Confira o cronograma das aulas e os tópicos que serão abordados:
      </p>

      <div class="text-center">
        <img
          src="https://res.cloudinary.com/dyhjjms8y/image/upload/v1717115396/Captura_de_tela_2024-05-31_002953_evnk75.png"
          alt="Roadmap das Aulas" class="img-fluid rounded shadow">
      </div>
    </div>
  </div>
</section>


<section class="container" style="margin-top: 80px;">
  <div>
    <h1 class="mb-4">Improve your coding skills</h1>
    <table class="table table-striped">
      <thead>
        <tr>
          <th>Curso</th>
          <th>Semana</th>
          <th>Pontuação</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>
            <a href="https://www.linkedin.com/advice/3/how-do-you-improve-your-programming-skills" target="_blank"
              class="btn btn-link text-decoration-none text-dark fw-bold">
              <i class="fa-brands fa-phabricator"></i> Como você melhora suas habilidades de programação?
            </a>
          </td>
          <td>Semana 10</td>
          <td>0</td>
        </tr>
        <tr>
          <td>
            <a href="https://www.youtube.com/watch?v=X99Be8wJBMI" target="_blank"
              class="btn btn-link text-decoration-none text-dark fw-bold">
              <i class="fa-solid fa-greater-than"></i> How To Be A GREAT Programmer
            </a>
          </td>
          <td>Semana 10</td>
          <td>0</td>
        </tr>
        <tr>
          <td>
            <a href="https://ocw.mit.edu/courses/6-01sc-introduction-to-electrical-engineering-and-computer-science-i-spring-2011/resources/mit6_01scs11_chap01/"
              target="_blank" class="btn btn-link text-decoration-none text-dark fw-bold">
              <i class="fa-solid fa-diagram-project"></i> Object-Oriented Programming
            </a>
          </td>
          <td>Semana 10</td>
          <td>0</td>
        </tr>
      </tbody>
    </table>
  </div>
</section>

<section class="container py-5">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <h2 class="text-center display-4 mb-4"><i class="fab fa-python me-2"></i> Tutorial de Orientação a Objetos com
        Python</h2>

      <div class="accordion" id="oopTutorialAccordion">

        <div class="accordion-item">
          <h3 class="accordion-header" id="headingOne">
            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne"
              aria-expanded="true" aria-controls="collapseOne">
              Passo 1: Classes e Objetos
            </button>
          </h3>
          <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne"
            data-bs-parent="#oopTutorialAccordion">
            <div class="accordion-body">
              <p>Em Python, uma <strong>classe</strong> é um modelo para criar <strong>objetos</strong> (instâncias).
                Pense em uma classe como um projeto para uma casa, e objetos como as casas construídas a partir desse
                projeto.</p>
              <pre><code class="language-python">
class Cachorro:
    def __init__(self, nome, raca):
        self.nome = nome
        self.raca = raca

    def latir(self):
        print("Au au!")
                            </code></pre>
              <p>Neste exemplo, <code>Cachorro</code> é a classe, e
                <code>meu_cachorro = Cachorro("Rex", "Labrador")</code> cria um objeto da classe <code>Cachorro</code>.
              </p>
            </div>
          </div>
        </div>

        <div class="accordion-item">
          <h3 class="accordion-header" id="headingTwo">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
              data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
              Passo 2: Atributos
            </button>
          </h3>
          <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo"
            data-bs-parent="#oopTutorialAccordion">
            <div class="accordion-body">
              <p><strong>Atributos</strong> são as características de um objeto. No exemplo acima, <code>nome</code> e
                <code>raca</code> são atributos da classe <code>Cachorro</code>.
              </p>
              <pre><code class="language-python">
print(meu_cachorro.nome)  # Saída: Rex
print(meu_cachorro.raca)  # Saída: Labrador
                            </code></pre>
            </div>
          </div>
        </div>

        <div class="accordion-item">
          <h3 class="accordion-header" id="headingThree">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
              data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
              Passo 3: Métodos
            </button>
          </h3>
          <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree"
            data-bs-parent="#oopTutorialAccordion">
            <div class="accordion-body">
              <p><strong>Métodos</strong> são as ações que um objeto pode realizar. No exemplo, <code>latir()</code> é
                um método da classe <code>Cachorro</code>.</p>
              <pre><code class="language-python">
meu_cachorro.latir()  # Saída: Au au!
                            </code></pre>
            </div>
          </div>
        </div>

      </div>
    </div>
  </div>
</section>

<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-python.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism.min.css">

<section class="container py-5">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <h2 class="text-center display-4 mb-4"><i class="fab fa-csharp me-2"></i> Tutorial de Orientação a Objetos com C#
      </h2>

      <div class="accordion" id="oopTutorialAccordion">

        <div class="accordion-item">
          <h3 class="accordion-header" id="headingOne">
            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne"
              aria-expanded="true" aria-controls="collapseOne">
              Passo 1: Classes e Objetos
            </button>
          </h3>
          <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne"
            data-bs-parent="#oopTutorialAccordion">
            <div class="accordion-body">
              <p>Em C#, uma <strong>classe</strong> é um modelo para criar <strong>objetos</strong> (instâncias). Uma
                classe define as propriedades (dados) e métodos (comportamentos) que os objetos terão.</p>
              <pre><code class="language-csharp">
public class Cachorro
{
    public string Nome { get; set; }
    public string Raca { get; set; }

    public void Latir()
    {
        Console.WriteLine("Au au!");
    }
}
                            </code></pre>
              <p>Neste exemplo, <code>Cachorro</code> é a classe, e
                <code>Cachorro meuCachorro = new Cachorro("Rex", "Labrador");</code> cria um objeto da classe
                <code>Cachorro</code>.
              </p>
            </div>
          </div>
        </div>

        <div class="accordion-item">
          <h3 class="accordion-header" id="headingTwo">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
              data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
              Passo 2: Propriedades
            </button>
          </h3>
          <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo"
            data-bs-parent="#oopTutorialAccordion">
            <div class="accordion-body">
              <p><strong>Propriedades</strong> são as características de um objeto. No exemplo acima, <code>Nome</code>
                e <code>Raca</code> são propriedades da classe <code>Cachorro</code>.</p>
              <pre><code class="language-csharp">
Console.WriteLine(meuCachorro.Nome);  // Saída: Rex
Console.WriteLine(meuCachorro.Raca);  // Saída: Labrador
                            </code></pre>
            </div>
          </div>
        </div>

        <div class="accordion-item">
          <h3 class="accordion-header" id="headingThree">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
              data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
              Passo 3: Métodos
            </button>
          </h3>
          <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree"
            data-bs-parent="#oopTutorialAccordion">
            <div class="accordion-body">
              <p><strong>Métodos</strong> são as ações que um objeto pode realizar. No exemplo, <code>Latir()</code> é
                um método da classe <code>Cachorro</code>.</p>
              <pre><code class="language-csharp">
meuCachorro.Latir();  // Saída: Au au!
                            </code></pre>
            </div>
          </div>
        </div>

      </div>
    </div>
  </div>
</section>

<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-csharp.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism.min.css">

<section class="container py-5">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <div class="card">
        <div class="card-body text-center">
          <h2 class="card-title display-5 mb-4">
            <i class="fas fa-code-branch me-2"></i> Análise de Projeto: Padrões de Repositório com Orientação a Objetos
          </h2>
          <p class="card-text lead">
            Explore o repositório "aula_dotnet_cars" e aprenda sobre a aplicação de padrões de repositório em projetos
            C# com orientação a objetos.
          </p>
          <a href="https://github.com/afonsobrandaointeli/aula_dotnet_cars" class="btn btn-primary btn-lg"
            target="_blank">
            <i class="fab fa-github me-2"></i> Acessar Repositório
          </a>
        </div>
      </div>
    </div>
  </div>
</section>


<section class="container py-5">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <h2 class="text-center display-4 mb-4"><i class="fab fa-python me-2"></i> Desafio de Orientação a Objetos com
        Python</h2>
      <h3 class="text-center">Sistema de Gerenciamento de Biblioteca</h3>

      <div class="card mb-4">
        <div class="card-body">
          <h5 class="card-title">Cenário:</h5>
          <p class="card-text">Você foi contratado para desenvolver um sistema de gerenciamento de biblioteca usando
            orientação a objetos em Python. O sistema deve permitir:</p>
          <ul>
            <li>Gerenciar livros: Adicionar, remover e listar livros. Cada livro possui título, autor, ISBN e status
              (disponível ou emprestado).</li>
            <li>Gerenciar usuários: Adicionar, remover e listar usuários. Cada usuário possui nome, ID e lista de livros
              emprestados.</li>
            <li>Empréstimo de livros: Registrar o empréstimo de um livro para um usuário e a data de devolução prevista.
            </li>
            <li>Devolução de livros: Registrar a devolução de um livro e atualizar o status do livro para disponível.
            </li>
          </ul>
        </div>
      </div>

      <div class="card mb-4">
        <div class="card-body">
          <h5 class="card-title">Requisitos:</h5>
          <ol>
            <li>Crie as classes <code>Livro</code>, <code>Usuario</code> e <code>Biblioteca</code>.</li>
            <li>Implemente os métodos necessários para cada classe, como:
              <ul>
                <li><code>Livro</code>: <code>__init__</code>, <code>emprestar</code>, <code>devolver</code></li>
                <li><code>Usuario</code>: <code>__init__</code>, <code>pegar_emprestado</code>,
                  <code>devolver_livro</code>
                </li>
                <li><code>Biblioteca</code>: <code>__init__</code>, <code>adicionar_livro</code>,
                  <code>remover_livro</code>, <code>adicionar_usuario</code>, <code>remover_usuario</code>,
                  <code>emprestar_livro</code>, <code>devolver_livro</code>, <code>listar_livros</code>,
                  <code>listar_usuarios</code>
                </li>
              </ul>
            </li>
            <li>Utilize atributos para armazenar as informações de cada objeto.</li>
            <li>Utilize listas para armazenar os livros da biblioteca e os livros emprestados por cada usuário.</li>
            <li>Crie um menu interativo para o usuário, permitindo que ele realize as operações do sistema.</li>
          </ol>
        </div>
      </div>

      <div class="card mb-4">
        <div class="card-body">
          <h5 class="card-title">Dicas:</h5>
          <ul>
            <li>Utilize o conceito de encapsulamento para proteger os atributos das classes e garantir a integridade dos
              dados.</li>
            <li>Utilize o conceito de herança para criar classes mais especializadas, como <code>LivroEmprestado</code>
              que herda de <code>Livro</code> e adiciona a data de devolução.</li>
            <li>Utilize o conceito de polimorfismo para criar métodos com o mesmo nome em diferentes classes, como
              <code>emprestar</code> em <code>Livro</code> e <code>pegar_emprestado</code> em <code>Usuario</code>.
            </li>
          </ul>
        </div>
      </div>

      <div class="card mb-4">
        <div class="card-body">
          <h5 class="card-title">Bônus:</h5>
          <ul>
            <li>Implemente um sistema de multas para livros devolvidos com atraso.</li>
            <li>Crie um sistema de reservas para livros que não estão disponíveis no momento.</li>
            <li>Implemente um sistema de busca para encontrar livros por título, autor ou ISBN.</li>
          </ul>
        </div>
      </div>

      <div class="card">
        <div class="card-body">
          <h5 class="card-title">Exemplo de uso:</h5>
          <pre><code class="language-python">
biblioteca = Biblioteca()

livro1 = Livro("O Senhor dos Anéis", "J.R.R. Tolkien", "9788533613110")
livro2 = Livro("Harry Potter e a Pedra Filosofal", "J.K. Rowling", "9788532511010")
biblioteca.adicionar_livro(livro1)
biblioteca.adicionar_livro(livro2)

usuario1 = Usuario("João Silva", 12345)
biblioteca.adicionar_usuario(usuario1)
                    </code></pre>
        </div>
      </div>
    </div>
  </div>
</section>

<section>
  <div class="container p-4">
    <div class="row justify-content-center">
      <div class="card col-md-8">
        <div class="card-body">
          <table class="table">
            <thead>
              <tr>
                <th scope="col">#</th>
                <th scope="col">Indicações</th>
                <th scope="col">Link</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <th scope="row">1</th>
                <td>Design Patterns</td>
                <td><a href="https://www.tabnews.com.br/Bixo/clube-do-livro-1-padroes-de-projeto-design-patterns"
                    target="_blank">Post
                    no tabnews</a></td>
              </tr>
              <tr>
                <th scope="row">2</th>
                <td>Padrões de Nomes</td>
                <td><a href="https://www.tabnews.com.br/csant/os-principais-padroes-de-nome-na-programacao"
                    target="_blank">Post
                    no tabnews</a></td>
              </tr>
              <tr>
                <th scope="row">3</th>
                <td>Refactoring Guru</td>
                <td><a href="https://refactoring.guru/design-patterns" target="_blank">Site</a></td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</section>

<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-python.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

<section class="container py-5">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <div class="card bg-info text-white">
        <div class="card-body text-center">
          <h2 class="card-title display-5 mb-4">
            <i class="fas fa-hands-helping me-2"></i> Precisa de Ajuda?
          </h2>
          <p class="card-text lead">
            Estou aqui para te ajudar com os artefatos. Se você tiver alguma dúvida ou precisar de
            orientação, não hesite em me procurar.
          </p>
        </div>
      </div>
    </div>
  </div>
</section>

<section class="container py-5 mb-5" id="avaliacao">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <div class="card text-center border-info shadow">
        <div class="card-header bg-info text-white">
          <i class="fas fa-comment-dots me-2"></i> Sua Opinião é Importante!
        </div>
        <div class="card-body">
          <p class="lead">
            Deixe seu feedback com estrelas e comentários e
            ajude-nos a melhorar o Inteli e o curso.
          </p>
        </div>
      </div>
    </div>
  </div>
</section>
